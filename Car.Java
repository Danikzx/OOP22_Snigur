  /**
* Практикум 3 Cтворення  классов. Практикум 4 - создание документов (в файле. GitHabTab)
*/
    класс Car extends Cars реализует Cloneable { // Практикум 6 - Абстрактные классы, спадкування
        частная струнная марка ;
        частное логическое значение embedded system ;
        public Car(строковая марка,год выпуска,модель,логическое значение embedded system) { //
            супер ( модель , год выпуска );
            это . марка = марка;
            это .  встроенная система =встроенная система ;
        }
           публичная строка getModel () {
            все модели;
        }
        общественное логическое значение  embedded system () {
            год выпуска системы ;
        }
        public void set embedded system(логическое значение embedded system ) {
            это . встроена = встроена ;
        }
        @ Переопределить
        общественная недействительная кора () {
            Система . вне . println ( "Сири" );
        }
        
        // Практикум 5 Операторы, умовні конструкции, циклы 
        @ Переопределить
        public boolean equals ( Object o ) { // Практикум 7 Логика дорівнює - не дорівнює
            если ( это == o ) вернуть true ;
            @ Переопределить 
            public boolean equals ( Object o ) { // Практикум 7 Логика дорівнює - не дорівнює
            если ( это == o ) вернуть true ;
             if ( o == null || getClass () != o . getClass ()) return false ;
              Машина Машина = ( Машина ) o ;
              вернутьembedded system   == машина.embedded system && getAname (). равно ( машина.ggetAname()) && getModel ().равно(машина.getModel( ));
                }

        public Car clone () { // Практикум 8 - Клонування об'єктів
            попробуй {
               возвращение ( Машина ) супер . клон ();
            } получить( CloneNotSupportedException e ) {
                бросить новую AssertionError ();
            }
        }
        @ Переопределить 
        общедоступная строка toString () {
        вернуть "машина{" +
        "название='" + getAname () + '\'' +
        ", год выпуска=" + year of issue () +
        ",  модель  ='" + модель + '\'' +
        ",  embedded system  ="+ embedded system   +
        '}' ;
  }
 }    
